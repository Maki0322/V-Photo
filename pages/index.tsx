import Head from 'next/head'

import { FormControl, Select } from '@chakra-ui/react'
import { styled } from '@mui/system';

import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';

import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import { useRef, useState } from 'react';
import { useEffect } from 'react';

import {FlickrApiType} from '../types/FlickrApi'

type JsonType = FlickrApiType;


// FavoriteBorderIconのcss
const MyFavoriteBorderIcon = styled(FavoriteBorderIcon)({
  cursor: "pointer",
  padding: "7px",
  fontSize: "42px",
  borderRadius: "18px",
  position: "absolute",
  bottom: "20px",
  right: "20px",
  color:"white",
  zIndex:"10",
  "&:hover": {
    color:"red",
  }
})

// type Team =
//   | "すべてのチーム"
//   | "ZETA DIVISION"
//   | "Crazy Raccoon"
//   | "Northeption"

export default function Home() {
  // プルダウンの内容
  const teamsValue = [
    // "すべてのチーム",
    "ZETA DIVISION", 
    "Crazy Raccoon", 
    "Northeption"
  ]
  // プルダウンの値をuseStateで管理
  const [teams, setTeams] = useState("ZETA DIVISION")
  // プルダウンを動かすための関数
  const handleChangeTeam = (e:React.ChangeEvent<HTMLSelectElement>) => {
    setTeams(e.target.value);
  }

  const fetchData:any = [];
  const [pages, setPages] = useState();
  const pageURLsArr:any = [];
  
  const [allPhotos, setAllPhotos] = useState<JsonType[]>([]);
  // const [allPhotos, setAllPhotos] = useState<number[]>([]);

  const ref:any = useRef();
  
  useEffect(()=> {
    setTeams(teams)
  },[])

  useEffect(() => {
    const getFlickrApi = async()=> {
      // APIURL
      const endpointURL =
      // すべての写真(1ページ目)
      // "https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=500&extras=url_m,url_l " 
      // ZETAの写真(1ページ目)
      "https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=500&tags=zeta%20division&extras=url_m,url_l " 
      
      // APIを叩く（データフェッチング）
      await fetch(endpointURL)
        .then(res => {
          return res.json()
        })
        .then((data) => {
          // ページ数を取得
          setPages(data.photos.pages)
          return data.photos.pages
        })
        .then((pages) => {
          async function getPhotos(){
            for(let i=0; i<pages;i++){
              await pageURLsArr.push(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=500&page=${i+1}&tags=zeta%20division&extras=url_m,url_l`)
              // await pageURLsArr.push(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=500&page=${i+1}&extras=url_m,url_l`)
              await fetch(pageURLsArr[i])
                .then(res => {
                  return res.json()
                })
                .then((da) => {
                  return fetchData.push(...da.photos.photo.flat())
                })
            }
            await setAllPhotos(fetchData)
          }
          getPhotos()
        })
      }
      getFlickrApi()
    },[])


  return (
    <>
      <Head>
        <title>V-Photo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/VPhotoIcon2.ico" />
      </Head>
      <Header />

      <div className={styles.sort_area}>

        <div className={styles.select_box}>
          <FormControl >
            <Select 
              value={teams}
              onChange={(e) => handleChangeTeam(e)}
              ref={ref}
              borderRadius="30px" 
              size='sm' 
              w="200px" 
              _focus={{ boxShadow: "none", borderColor:"rgb(230, 235, 242)"}}
            >
              {teamsValue.map((team) => (
                <option key={team} value={team}>
                  {team}
                </option>
              ))}
            </Select>
          </FormControl>
        </div>
        <div className={styles.select_box}>
          <Select placeholder='すべての日程' borderRadius="30px" size='sm' w="200px" _focus={{ boxShadow: "none", borderColor:"rgb(230, 235, 242)"}}>
            <option value='DAY1'>DAY1</option>
            <option value='DAY2'>DAY2</option>
            <option value='DAY3'>DAY3</option>
          </Select>
        </div>
        <div className={styles.select_box}>
          <Select placeholder='すべての大会' borderRadius="30px" size='sm' w="300px" _focus={{ boxShadow: "none", borderColor:"rgb(230, 235, 242)"}}>
            <option value='vct2021: Stage 2 Masters - Reykjavík'>vct2021: Stage 2 Masters - Reykjavík</option>
            <option value='vct2021: Stage 3 Masters - Berlin'>vct2021: Stage 3 Masters - Berlin</option>
            <option value='VALORANT Champions 2021'>VALORANT Champions 2021</option>
            <option value='vct2022: Stage 1 Masters - Reykjavík'>vct2022: Stage 1 Masters - Reykjavík</option>
            <option value='vct2022: Stage 2 Masters - Copenhagen'>vct2022: Stage 2 Masters - Copenhagen</option>
            <option value='VALORANT Champions 2022'>VALORANT Champions 2022</option>
          </Select>
        </div>
      </div>
      <div className={styles.container}>

        {allPhotos.map((data:any) => (
          <div className={styles.photos} key={data.id}>
            <img 
              className={styles.img} 
              src={data.url_m} 
              alt="#"
            />
            <MyFavoriteBorderIcon />
          </div>
        ))}

      </div>
    </>
  )
}
