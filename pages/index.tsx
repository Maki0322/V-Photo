import Head from 'next/head'

import { styled } from '@mui/system';

import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';

import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import { useState } from 'react';
import { useEffect } from 'react';

import {FlickrApiType} from '../types/FlickrApi'

import { Select, FormControl, MenuItem } from '@mui/material';
import PhotosPagination from '../components/PhotosPagination';
import PhotoList from '../components/PhotoList';
import { useRecoilState } from 'recoil';
import { currentPageState } from '../state/currentPageState';
import { pageCountState } from '../state/pageCountState';


const MyTeamSelect = styled(Select)({
  width: "200px",
  height: "40px",
  borderRadius: "40px",
})
const MyDaySelect = styled(Select)({
  width: "150px",
  height: "40px",
  borderRadius: "40px",
})
const MytournamentSelect = styled(Select)({
  width: "340px",
  height: "40px",
  borderRadius: "40px",
})

type Team =
  | "すべて"
  | "ZETA DIVISION"
  | "Crazy Raccoon"
  | "Northeption"

export default function Home() {

  // 【チームフィルターの実装】
  // チームフィルターのプルダウンの内容
  const teamfilterStatus =  [
    "すべて",
    "ZETA DIVISION",
    "Crazy Raccoon",
    "Northeption",
  ]
  // プルダウンの値を管理
  const [teamFilter, setTeamFilter] = useState<Team>("すべて");
  // プルダウンを動かすための関数
  const handleChangeTeamFilter = (e:any) => {
    setTeamFilter(e.target.value);
  }
  // useEffect(()=>{
  //   console.log(teamFilter)
  // },[teamFilter]) 

  const fetchData:any = [];
  const [pageCount, setPageCount] = useRecoilState(pageCountState);
  const pageURLsArr:any = [];
  
  const [allPhotos, setAllPhotos] = useState<FlickrApiType[]>([]);
  const [currentGetPhotos, setCurrentGetPhotos] = useState<FlickrApiType[]>([]);
  

  // 現在のページ数
  const [currentPage, setCurrentPage] = useRecoilState(currentPageState);

  // 1ページ目の写真を取得し、ページ数を取得（1ページあたり100件）
  useEffect(() => {
    if(teamFilter === "すべて"){
      const allFlickrApi = async()=> {
        // APIURL
        const endpointURL = 
        `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=100&&page=${currentPage}&extras=url_m,url_l` 
        await fetch(endpointURL)
        .then(res => {
          return res.json()
        })
        .then((data) => {
          // ページ数を取得
          setPageCount(data.photos.pages)
          // 写真を取得
          setCurrentGetPhotos(data.photos.photo)
        })
      }
      allFlickrApi()
    } else {
      const teamFilterFlickrApi = async()=> {
        // APIURL
        const teamFilterEndpointURL = 
        `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=943b55067047b1a156e92ca1cc6fbe93&user_id=192820496@N05&format=json&nojsoncallback=?&per_page=100&&page=${currentPage}&tags=${teamFilter}&extras=url_m,url_l` 
        await fetch(teamFilterEndpointURL)
        .then(res => {
          return res.json()
        })
        .then((data) => {
          // ページ数を取得
          setPageCount(data.photos.pages)
          // 写真を取得
          setCurrentGetPhotos(data.photos.photo)
        })
      }
      teamFilterFlickrApi()
    }
  },[currentPage,teamFilter])

  return (
    <>
      <Head>
        <title>V-Photo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/VPhotoIcon2.ico" />
      </Head>
      <Header />
      <div className={styles.sort_area}>
        <div className={styles.select_box}>
          <FormControl>
            <MyTeamSelect 
              defaultValue={'すべて'}
              id="team-select"
              value={teamFilter}
              onChange={(e)=>handleChangeTeamFilter(e)}
            >
              {teamfilterStatus.map((team) => (
                <MenuItem key={team} value={team}>{team}</MenuItem>
              ))}
            </MyTeamSelect>
          </FormControl>
        </div>
        <div className={styles.select_box}>
          <FormControl>
            <MyDaySelect defaultValue={'すべての日程'} id="day-select">
              <MenuItem value={'すべての日程'}>すべての日程</MenuItem>
              <MenuItem value={'DAY1'}>DAY1</MenuItem>
              <MenuItem value={'DAY2'}>DAY2</MenuItem>
              <MenuItem value={'DAY3'}>DAY3</MenuItem>
            </MyDaySelect>
          </FormControl>
        </div>
        <div className={styles.select_box}>
          <FormControl>
            <MytournamentSelect defaultValue={'すべての大会'} id="tournament-select">
              <MenuItem value={'すべての大会'}>すべての大会</MenuItem>
              <MenuItem value={'vct2021: Stage 2 Masters - Reykjavík'}>vct2021: Stage 2 Masters - Reykjavík</MenuItem>
              <MenuItem value={'vct2021: Stage 3 Masters - Berlin'}>vct2021: Stage 3 Masters - Berlin</MenuItem>
              <MenuItem value={'VALORANT Champions 2021'}>VALORANT Champions 2021</MenuItem>
              <MenuItem value={'vct2022: Stage 1 Masters - Reykjavík'}>vct2022: Stage 1 Masters - Reykjavík</MenuItem>
              <MenuItem value={'vct2022: Stage 2 Masters - Copenhagen'}>vct2022: Stage 2 Masters - Copenhagen</MenuItem>
              <MenuItem value={'VALORANT Champions 2022'}>VALORANT Champions 2022</MenuItem>
            </MytournamentSelect>
          </FormControl>
        </div>
      </div>
      <div className={styles.container}>
        <PhotoList allPhotos={allPhotos} currentGetPhotos={currentGetPhotos}/>
      </div>
      <div className={styles.pagination}>
        <PhotosPagination allPhotos={allPhotos} currentGetPhotos={currentGetPhotos}/>
      </div>
    </>
  )
}
