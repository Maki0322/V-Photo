import React, { useState, useEffect }  from 'react'
import Link from 'next/link'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { createUserWithEmailAndPassword, getAuth } from 'firebase/auth'


import { styled } from '@mui/system';

import styles from '../styles/signup.module.css'
import FormHeader from '../components/FormHeader'

import { Button,TextField, FormLabel, Divider } from '@mui/material';
import { db, firebaseApp } from '../firestore/firebase'
import { doc, setDoc } from 'firebase/firestore'

const MyFormLabel = styled(FormLabel)({
  display:"block",
  fontWeight:"bold",
  paddingBottom:"4px",
})
const MyTextField = styled(TextField)({
  borderRadius:"30px",
  width:"100%",
})
const MyButton = styled(Button)({
  marginBottom:"10px",
  // borderColor:"RGB(237, 242, 247)",
  color:"black",
  fontWeight:"bold",
  backgroundColor:"RGB(210, 210, 210)",
  "&:hover": {
    backgroundColor:"RGB(62, 140, 236)",
    color:"white",
  }
})
const MyDivider = styled(Divider)({
  marginBottom:"10px",
})


const signup_email = () => {
  const auth = getAuth(firebaseApp);
  const router = useRouter();

  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")

  useEffect(() => {
    if(auth.currentUser){
      console.log("auth.currentUser",auth.currentUser)
      router.push("/")
    } else {
      console.log("auth.currentUser",auth.currentUser)
      return
    }
  },[]);

  const handleEmailChange = (e) => {
    setEmail(e.target.value)
  }
  const handlePasswordChange = (e) => {
    setPassword(e.target.value)
  }
  // emailとpasswordを登録する関数
  const signupWithEmail = (event: any) => {
    event.preventDefault();
    createUserWithEmailAndPassword(auth, email, password)
    .then(() => {
      router.push("/")
    })
    // .then(() => {
    //   router.push("/signup_profile")
    // })
    .catch((error) => {
      alert(error.message)
    }); 
  };

  return (
    <>
      <Head>
        <title>ユーザー登録</title>
        {/* <title>ユーザー登録(1/2)</title> */}
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/VPhotoIcon2.ico" />
      </Head>
      <FormHeader />
      <div className={styles.signup}>
        <div className={styles.title_area}>
          <text className={styles.title}>
            ユーザー登録&nbsp;
          </text>
          {/* <text className={styles.sub_title}>
            (1/2)
          </text> */}
        </div>
        <form>
        <div className={styles.email_area}>
          <MyFormLabel>Email address</MyFormLabel>
          <MyTextField 
            placeholder='Email address' variant="outlined" size='small' onChange={(e)=> handleEmailChange(e)}/>
        </div>
        <div className={styles.password_area}>
          <MyFormLabel>Password</MyFormLabel>
          <MyTextField placeholder="Password" variant="outlined" size='small' onChange={(e) => handlePasswordChange(e)}/>
        </div>
        <MyButton variant="contained" fullWidth={true} onClick={signupWithEmail}>
          登録
        </MyButton>
        {/* <MyButton variant="contained" fullWidth={true} onClick={signupWithEmail}>
          次へ
        </MyButton> */}
      </form>
        <div className={styles.signup_link_area}>
          登録済みの方は
            <Link href={"/login"} style={{textDecoration:"none"}}>
              <span className={styles.login_link}>
                こちら
              </span>
            </Link>
        </div>
      </div>
    </>
  )
}

export default signup_email